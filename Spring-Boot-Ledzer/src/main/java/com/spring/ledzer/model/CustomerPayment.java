package com.spring.ledzer.model;
// Generated Dec 16, 2018 1:43:16 PM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Convert;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.spring.ledzer.converter.PaymentTypeConverter;
import com.spring.ledzer.model.audit.UserDateAudit;

/**
 * CustomerPaymentDetails generated by hbm2java
 */
@Entity
@Table(name = "customer_payment")
public class CustomerPayment extends UserDateAudit implements java.io.Serializable {

	private Long id;
	private Date paymentDate;
	private String paymentNumber;
	private String paymentVoucher;
	private PaymentMode paymentMode;
	private String chequeNo;
	private String bankName;
	private String creditCardNo;
	private Date chequeDueDate;
	private double paymentAmount;
	@Convert(converter = PaymentTypeConverter.class)
	private PaymentType paymentType;
	
	private Account account;
	private Invoice invoice;
	private Customer customer;
	
	private Set<AccountTransactions> accountTransactions = new HashSet<AccountTransactions>(0);

	public CustomerPayment() {
	}



	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	@Temporal(TemporalType.DATE)
	@Column(name = "payment_date", nullable = false, length = 10)
	public Date getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(Date paymentDate) {
		this.paymentDate = paymentDate;
	}

	@Column(name = "payment_number", length = 20)
	public String getPaymentNumber() {
		return this.paymentNumber;
	}

	public void setPaymentNumber(String paymentNumber) {
		this.paymentNumber = paymentNumber;
	}

	@Column(name = "payment_voucher", length = 20)
	public String getPaymentVoucher() {
		return this.paymentVoucher;
	}

	public void setPaymentVoucher(String paymentVoucher) {
		this.paymentVoucher = paymentVoucher;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_mode_id", nullable = false)
	public PaymentMode getPaymentMode() {
		return this.paymentMode;
	}

	public void setPaymentMode(PaymentMode paymentMode) {
		this.paymentMode = paymentMode;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id")
	public Account getAccount() {
		return account;
	}
	public void setAccount(Account account) {
		this.account = account;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "invoice_id")
	public Invoice getInvoice() {
		return invoice;
	}
	public void setInvoice(Invoice invoice) {
		this.invoice = invoice;
	}

	@Column(name = "cheque_no", length = 10)
	public String getChequeNo() {
		return this.chequeNo;
	}

	public void setChequeNo(String chequeNo) {
		this.chequeNo = chequeNo;
	}

	@Column(name = "bank_name", length = 50)
	public String getBankName() {
		return this.bankName;
	}

	public void setBankName(String bankName) {
		this.bankName = bankName;
	}

	@Column(name = "credit_card_no", length = 15)
	public String getCreditCardNo() {
		return creditCardNo;
	}
	public void setCreditCardNo(String creditCardNo) {
		this.creditCardNo = creditCardNo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "cheque_due_date", length = 10)
	public Date getChequeDueDate() {
		return this.chequeDueDate;
	}

	public void setChequeDueDate(Date chequeDueDate) {
		this.chequeDueDate = chequeDueDate;
	}

	@Column(name = "payment_amount", nullable = false, precision = 15)
	public double getPaymentAmount() {
		return this.paymentAmount;
	}

	public void setPaymentAmount(double paymentAmount) {
		this.paymentAmount = paymentAmount;
	}
	public PaymentType getPaymentType() {
		return paymentType;
	}
	public void setPaymentType(PaymentType paymentType) {
		this.paymentType = paymentType;
	}
	@Column(name = "customer_id", nullable = false)
	public Customer getCustomer() {
		return customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerPayment")
	public Set<AccountTransactions> getAccountTransactions() {
		return accountTransactions;
	}

	public void setAccountTransactions(Set<AccountTransactions> accountTransactions) {
		this.accountTransactions = accountTransactions;
	}

}
