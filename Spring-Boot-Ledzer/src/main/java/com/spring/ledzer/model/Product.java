package com.spring.ledzer.model;

// Generated Dec 16, 2018 1:43:16 PM by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product")
public class Product extends DateAudit<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long id;
	private String name;
	private String code;
	private Tax saleTaxId;
	private Uom uom;
	private BigDecimal salePrice;
	private BigDecimal purchasePrice;
	private BigDecimal discountPer;
	private Category category;
	private Tax purchaseTaxId;
	private String description;
	private BigDecimal stock;
	private Date lastStockDate;
	private Set<InvoiceDetail> InvoiceDetailes = new HashSet<InvoiceDetail>(0);
	
	public Product() {
		 super();
	}
	
	public Product(Long id, String name, String code, Tax saleTaxId, BigDecimal salePrice, BigDecimal purchasePrice,
			BigDecimal discountPer, Uom uom, Category category, Tax purchaseTaxId, String description, BigDecimal stock,
			Date lastStockDate, Set<InvoiceDetail> InvoiceDetailes) {
		super();
		this.id = id;
		this.name = name;
		this.code = code;
		this.saleTaxId = saleTaxId;
		this.salePrice = salePrice;
		this.purchasePrice = purchasePrice;
		this.discountPer = discountPer;
		this.category = category;
		this.purchaseTaxId = purchaseTaxId;
		this.description = description;
		this.stock = stock;
		this.lastStockDate = lastStockDate;
		this.InvoiceDetailes = InvoiceDetailes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Column(name = "code", length = 50)
	public String getCode() {
		return code;
	}
	public void setCode(String code) {
		this.code = code;
	}
	

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sale_tax_id")
	@JsonIgnore
	public Tax getSaleTaxId() {
		return saleTaxId;
	}
	public void setSaleTaxId(Tax saleTaxId) {
		this.saleTaxId = saleTaxId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "uom_id", nullable = false)
	@JsonIgnore
	public Uom getUom() {
		return uom;
	}

	public void setUom(Uom uom) {
		this.uom = uom;
	}

	@Column(name = "sale_price", nullable = false)
	public BigDecimal getSalePrice() {
		return salePrice;
	}
	public void setSalePrice(BigDecimal salePrice) {
		this.salePrice = salePrice;
	}

	@Column(name = "purchase_price", nullable = false)
	public BigDecimal getPurchasePrice() {
		return purchasePrice;
	}
	public void setPurchasePrice(BigDecimal purchasePrice) {
		this.purchasePrice = purchasePrice;
	}
	
	@Column(name = "discount_per", precision = 5)
	public BigDecimal getDiscountPer() {
		return discountPer;
	}

	public void setDiscountPer(BigDecimal discountPer) {
		this.discountPer = discountPer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id", nullable = false)
	@JsonIgnore
	public Category getCategory() {
		return category;
	}
	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "purchase_tax_id")
	@JsonIgnore
	public Tax getPurchaseTaxId() {
		return purchaseTaxId;
	}

	public void setPurchaseTaxId(Tax purchaseTaxId) {
		this.purchaseTaxId = purchaseTaxId;
	}

	@Column(name = "description", length = 500)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "stock", nullable = false, precision = 7)
	public BigDecimal getStock() {
		return stock;
	}
	public void setStock(BigDecimal stock) {
		this.stock = stock;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "last_stock_date", length = 19)
	public Date getLastStockDate() {
		return lastStockDate;
	}
	public void setLastStockDate(Date lastStockDate) {
		this.lastStockDate = lastStockDate;
	}
	
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	@JsonIgnore
	public Set<InvoiceDetail> getInvoiceDetailes() {
		return this.InvoiceDetailes;
	}

	public void setInvoiceDetailes(Set<InvoiceDetail> InvoiceDetailes) {
		this.InvoiceDetailes = InvoiceDetailes;
	}
}
